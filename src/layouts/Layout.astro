---
import '../../globals.css';
import { ModeToggle } from '@/components/ModeToggle';
import { Toaster } from "@/components/ui/sonner"
interface Props {
	title: string;
}

const { title } = Astro.props;
---
<script is:inline>
	const getThemePreference = () => {
		if (typeof localStorage !== 'undefined' && localStorage.getItem('theme')) {
			return localStorage.getItem('theme');
		}
		return window.matchMedia('(prefers-color-scheme: dark)').matches ? 'dark' : 'light';
	};
	const isDark = getThemePreference() === 'dark';
	document.documentElement.classList[isDark ? 'add' : 'remove']('dark');
 
	if (typeof localStorage !== 'undefined') {
		const observer = new MutationObserver(() => {
			const isDark = document.documentElement.classList.contains('dark');
			localStorage.setItem('theme', isDark ? 'dark' : 'light');
		});
		observer.observe(document.documentElement, { attributes: true, attributeFilter: ['class'] });
	}
</script>
<!doctype html>
<html lang="en">
	<head>
		<!-- Google tag (gtag.js) -->
		<script async src="https://www.googletagmanager.com/gtag/js?id=G-BQP6K1WTGS"></script>
		<script>
		//@ts-ignore
		(window as any).dataLayer = window.dataLayer || [];
		//@ts-ignore
		function gtag(){window.dataLayer.push(arguments);}
		//@ts-ignore
		gtag('js', new Date());
		//@ts-ignore
		gtag('config', 'G-BQP6K1WTGS');
		</script>
		<meta charset="UTF-8" />
		<meta name="description" content="Astro description" />
		<meta name="viewport" content="width=device-width" />
		<link rel="icon" type="image/svg+xml" href="/favicon.svg" />
		<meta name="generator" content={Astro.generator} />
		<title>{title}</title>
	</head>
	<body class="flex flex-col items-center h-screen bg-background w-full">
		<Toaster client:load richColors position="top-center"/>
		<div class="flex w-full justify-end max-w-3xl">
			<div class="ml-auto m-2">
				<ModeToggle client:only="react"/>
			</div>
		</div>
			<div class="flex flex-col items-center h-full bg-background">
				<slot />
			</div>
	</body>
</html>
